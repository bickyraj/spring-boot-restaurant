plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.bickyraj'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	compileOnly 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok:1.18.34'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'com.h2database:h2:2.3.232'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.postgresql:postgresql:42.7.4'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'io.micrometer:micrometer-core:1.11.0'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.apache.commons:commons-pool2'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.mockito:mockito-core:5.5.0"
	testImplementation "org.mockito:mockito-junit-jupiter:5.5.0"
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	testImplementation 'io.cucumber:cucumber-java:7.20.1'
	testImplementation 'io.cucumber:cucumber-junit:7.20.1'
	testImplementation 'org.junit.platform:junit-platform-suite-engine:1.11.3'
}

test {
	jvmArgs("-noverify", "-XX:+EnableDynamicAgentLoading")
}

tasks.named('test') {
	useJUnitPlatform()
	systemProperty("cucumber.junit-platform.naming-strategy", "long")
}